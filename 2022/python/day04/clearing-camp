#!/usr/bin/env python3

## Part 1 ##
# Read each line in the file & create two list items by splitting the line on ','
# Split those two lists into a dictionary consisting of start & stop integers.
# If first start is <= second start and first stop is >= second stop, return True.
# If second start is <= first start and second stop is >= first stop, return True.
# If neither of the above conditions are met, return False.
# With each True returned, increment a counter.

file = 'input.txt'

## Common Functions ##
def split_assignments(text_range):
  # Split input line on ',' into 2 list items.
  assignments = [x.strip() for x in text_range.split(',')]
  return assignments

def start_stop(text_range):
  # Split each list on '-' to find start & stop.
  range_ints = list(map(int, text_range.split('-')))
  start = range_ints[0]
  stop = range_ints[1]
  return {'start': start, 'stop': stop}

## Part 1 function ##
def full_overlap(input_line):
  assignments = split_assignments(input_line)
  # Some debugging output for testing
  if file == 'test-input.txt':
    print("Assignments List:", assignments)
  assignment0 = start_stop(assignments[0])
  assignment1 = start_stop(assignments[1])
  if file == 'test-input.txt':
    print("First Assignment:", assignment0)
    print("Second Assignment:", assignment1)
  # Compare starts & stops to find fully contained assignments
  # If first assignment fully contains second assingment
  if assignment0['start'] <= assignment1['start'] and assignment0['stop'] >= assignment1['stop']:
    # Some debugging output for testing
    if file == 'test-input.txt':
      print("assignment0 fully contains assignment1")
    return True
  # If second assignment fully contains first assingment
  elif assignment1['start'] <= assignment0['start'] and assignment1['stop'] >= assignment0['stop']:
    # Some debugging output for testing
    if file == 'test-input.txt':
      print("assignment1 fully contains assignment0")
    return True
  else:
    # Neither assignment fully contains the other
    return False

## Part 2 ##
# If first start <= second start <= first stop
# If second start >= first start >= second stop

## Part 2 Function ##
def partial_overlap(input_line):
  assignments = split_assignments(input_line)
    # Some debugging output for testing
  if file == 'test-input.txt':
    print("Assignments List:", assignments)
  assignment0 = start_stop(assignments[0])
  assignment1 = start_stop(assignments[1])
  if file == 'test-input.txt':
    print("First Assignment:", assignment0)
    print("Second Assignment:", assignment1)
  if assignment0['start'] <= assignment1['start'] <= assignment0['stop']:
    # Some debugging output for testing
    if file == 'test-input.txt':
      print("Assignments partially overlap")
    return True
  elif assignment1['start'] <= assignment0['start'] <= assignment1['stop']:
    # Some debugging output for testing
    if file == 'test-input.txt':
      print("Assignments partially overlap")
    return True
  else:
    return False


## Put it all together ##
with open(file) as input_file:
  full_overlaps = 0
  partial_overlaps = 0
  for line in input_file:
    # Part 1 | Count full overlaps
    if full_overlap(line):
      full_overlaps += 1
    # Part 2 | Count partial overlaps (which include full overlaps)
    if partial_overlap(line):
      partial_overlaps += 1
  print("Full Overlaps:", str(full_overlaps))
  print("Partial Overlaps:", str(partial_overlaps))
